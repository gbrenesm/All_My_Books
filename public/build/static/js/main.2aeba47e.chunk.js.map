{"version":3,"sources":["serviceWorker.js","services/auth.js","context.js","components/Layout.js","hooks/useInput.js","pages/Home.js","services/books.js","services/shelves.js","components/Loader.js","pages/UserHome.js","services/notes.js","services/quote.js","components/NewNote.js","components/NewQuote.js","components/Reference.js","components/ShelvesInBook.js","components/BookCardDetail.js","pages/BookDetail.js","pages/NewBook.js","pages/UserConfig.js","router.js","index.js"],"names":["Boolean","window","location","hostname","match","service","axios","create","baseURL","withCredentials","signup","user","a","post","login","userData","data","getCurrentUser","get","updateUser","put","logout","Context","createContext","CtxProvider","children","useState","setUser","useEffect","userdata","Provider","value","ctxUser","loginUser","clearctxUser","Layout","useContext","history","useHistory","logoutClick","push","src","alt","to","className","icon","faAngleDown","profilePhoto","onClick","useInput","initialValue","setValue","onChange","e","target","Home","usernameInput","emailInput","passwordInput","signupForm","setsignupForm","error","setError","errorMesagge","setErrorMesagge","preventDefault","username","email","password","catch","err","console","dir","response","message","notificationError","log","changeLogin","onSubmit","required","type","name","id","faGoogle","faFacebookF","createBook","bookData","getAllUsersBooks","page","books","getBookDetail","bookId","book","updateBook","deleteBook","delete","createShelf","shelfData","getOneShelf","shelfId","shelf","getUserShelves","shelves","addBookShelf","removeBookShelf","Loader","UserHome","setBooks","setShelves","changePage","setChangePage","setPage","lessbtn","setLessbtn","showNewShelf","setShowNewShelf","newShlef","setNewShlef","nameInput","fetchAllBooks","userbooks","booksByShelf","showForm","faBook","map","i","key","fetchBookByShelf","_id","cover","title","authorFirstName","authorLastName","createNote","noteData","deleteNote","noteId","createQuote","quoteData","deleteQuote","quoteId","NewNote","bookIdToUse","setNewNote","descriptionInput","chapterInput","pagesInput","showFrom","setShowFrom","description","chapter","pages","changeForm","faFeatherAlt","autofocus","placeholder","NewQuote","setNewQuote","noteInput","note","Reference","referenceAPA","setReferenceAPA","referenceMLA","setReferenceMLA","referenceChicago","setReferenceChicago","referenceUNEISO","setReferenceUNEISO","publisher","for","charAt","published","slice","publishPlace","toUpperCase","ISBN","ShelvesInBook","setNewShelf","nameIpunt","showAddShelf","setShowAddShelf","allUserShelves","setAllUserShelves","userShelves","fetchUsersShelves","removeBook","selected","BookCardDetail","setUpdateBook","bookShelves","setShowForm","titleInput","authorFirstNameInput","authorLastNameInput","publisherInput","publishedInput","editionInput","edition","ISBNInput","publishPlaceInput","formatInput","coverURL","setCoverURL","editForm","files","FormData","append","process","secure_url","format","faEdit","faTrashAlt","toLowerCase","BookDetail","params","setBook","notes","setNotes","quotes","setQuotes","references","setReferences","allNotes","setAllNotes","allQuotes","setAllQuotes","allShelves","setAllShelves","newNote","newQuote","newShelf","detailbook","bookshelves","fetchBook","faBookmark","faQuoteLeft","faFileAlt","eliminateNote","quote","eliminateQuote","NewBook","imageURL","setImageURL","UserConfig","photoURL","setPhotoURL","showShelvesConfig","setShowShelvesConfig","shelfNameInput","shlevesData","shelvesForm","fetchShelves","shlef","Router","component","path","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2aeba47e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\"\n\nconst baseURL = process.env.NODE_ENV === `production`? `/auth` : \"http://localhost:3000/auth\"\n\nconst service = axios.create({ baseURL, withCredentials: true })\n\nexport const signup = async user => {\n  await service.post(\"/signup\", user)\n  return true\n}\n\nexport const login = async userData => {\n  const { data: user } = await service.post(\"/login\", userData)\n  //console.log(user)\n  return user\n}\n\nexport const getCurrentUser = async () => {\n  const { data: user } = await service.get(\"/currentuser\")\n  //console.log(user)\n  return user\n}\n\nexport const updateUser = async userData => {\n  const { data: user } = await service.put(\"/updateuser\", userData)\n  return user\n}\n\nexport const logout = async () => {\n  await service.get(\"/logout\")\n}","import React, { createContext, useState, useEffect } from \"react\"\nimport { getCurrentUser } from \"./services/auth\"\n\nexport const Context = createContext()\n\nexport default function CtxProvider({ children }){\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    async function userdata() {\n      const { user } = await getCurrentUser()\n      setUser(user)\n    }\n    userdata()\n  },[])\n\n  const ctxUser = loginUser => setUser(loginUser)\n  const clearctxUser = () => setUser(null)\n\n  return (\n    <Context.Provider value={{\n      user,\n      ctxUser,\n      clearctxUser\n    }}>\n      {children}\n    </Context.Provider>\n  )\n}","import React, { useContext, useState } from 'react'\nimport { Context } from \"../context\"\nimport { Link } from \"react-router-dom\"\nimport { logout } from \"../services/auth\"\nimport { useHistory } from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\"\n\nfunction Layout({ children }) {\n  const { user, clearctxUser} = useContext(Context)\n  \n  const history = useHistory()\n\n  const logoutClick = async () =>{\n    await logout()\n    clearctxUser()\n    history.push(\"/\")\n  }\n\n\n  return (\n    <div>\n      <nav>\n        <div>\n          <p><img src=\"https://res.cloudinary.com/dxncdwsau/image/upload/v1600963193/All_My_Books/%C3%8Dcono_de_libros_blanco_hajncl.png\" alt=\"Books icon\"/>&nbsp; <Link to=\"/userhome\">All My Books</Link></p>\n        </div>\n        <div>\n          <ul>\n            <li className=\"navicon\"><FontAwesomeIcon icon={faAngleDown}/>&nbsp;<img src={user?.profilePhoto} alt=\"User\"/>\n              <ul>\n                <li><Link to=\"/userconfig\">Configuración</Link></li>\n                <li onClick={logoutClick}><Link>Cierra sesión</Link></li>\n              </ul>\n            </li>\n            \n          </ul>\n        </div>\n      </nav>\n      <main>\n        {children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout\n","import { useState } from \"react\"\n\nexport default function useInput(initialValue){\n  const [value, setValue] = useState(initialValue)\n\n  function onChange(e){\n    setValue(e.target.value)\n  }\n\n  return{\n    value,\n    onChange\n  }\n}","import React, { useState, useContext } from \"react\"\nimport { Context } from \"../context\"\nimport useInput from \"../hooks/useInput\"\nimport { signup, login } from \"../services/auth\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGoogle, faFacebookF } from \"@fortawesome/free-brands-svg-icons\"\nimport { Link } from \"react-router-dom\"\n\nfunction Home ({ history }) {\n  const { ctxUser } = useContext(Context)\n  const usernameInput = useInput(\"\")\n  const emailInput = useInput(\"\")\n  const passwordInput = useInput(\"\")\n  const [signupForm, setsignupForm] = useState(true)\n  const [error, setError] = useState(false)\n  const [errorMesagge, setErrorMesagge] = useState(\"\")\n\n  async function submitFormSignup(e){\n    e.preventDefault()\n    const username = usernameInput.value\n    const email = emailInput.value\n    const password = passwordInput.value\n    await signup({username, email, password}).catch(err => {\n      console.dir(err.response.data.message)\n      notificationError(err.response.data.message)})\n    if (error) setsignupForm(false)\n  }\n\n  async function submitFormLogin(e){\n    e.preventDefault()\n    const email = emailInput.value\n    const password = passwordInput.value\n    const user = await login({email, password}).catch(err => {\n      console.dir(err.response.data.message)\n      notificationError(err.response.data.message)\n    })\n    if (error) console.log(\"Hay un error\")\n    else {history.push(\"/userhome\")}\n    ctxUser(user)\n  }\n\n  function changeLogin(){\n    if (signupForm) setsignupForm(false)\n    else setsignupForm(true)\n  }\n\n  const notificationError = (message) =>{\n    setError(true)\n    setErrorMesagge(message)\n  }\n\n  return(\n    <div className=\"homepage\">\n      <div>\n        <h1>All My Books</h1>\n        <h2>El lugar para ordenar todos tus libros</h2>\n        <img src=\"https://res.cloudinary.com/dxncdwsau/image/upload/v1600883938/All_My_Books/Book_shelf_warm_colors_omdjq1.jpg\" alt=\"Bookshelf by colors\"/>\n      </div>\n      {signupForm && \n      <div>\n        <h2>Crea una cuenta</h2>\n          <form onSubmit={submitFormSignup}>\n            <label>Nombre de usuario: </label>\n            <br/>\n            <input required type=\"text\" name=\"username\" id=\"username\" {...usernameInput}/>\n            <br/>\n            <label>Email:</label>\n            <br/>\n            <input required type=\"text\" name=\"email\" id=\"email\" {...emailInput}/>\n            <br/>\n            <label>Contraseña:</label>\n            <br/>\n            <input required type=\"password\" name=\"password\" id=\"password\" {...passwordInput}/>\n            <br/>\n          {error && <p>{errorMesagge}</p>}\n            <button type=\"submit\">Crea tu cuenta</button>\n          </form>\n          <div>\n            <Link><FontAwesomeIcon icon={faGoogle} /> &nbsp;Google</Link>\n            <Link><FontAwesomeIcon icon={faFacebookF} /> Facebook</Link>\n          </div>\n          <hr/>\n          <div className=\"signupbtn\">\n            <p>¿Ya tienes cuenta?</p> <button onClick={changeLogin}>Inicia sesión</button>\n          </div>\n      </div>}\n      {!signupForm && \n      <div>\n        <h2>Inicia sesión</h2>\n          <form onSubmit={submitFormLogin}>\n            <label>Email</label>\n            <input required type=\"text\" name=\"email\" id=\"email\" {...emailInput}/>\n            <label>Contraseña</label>\n            <input required type=\"password\" name=\"password\" id=\"password\" {...passwordInput}/>\n            <button type=\"submit\">Inicia sesión</button>\n            {error && <p>{errorMesagge}</p>}\n          </form>\n          <div>\n            <Link><FontAwesomeIcon icon={faGoogle} /> &nbsp;Google</Link>\n            <Link><FontAwesomeIcon icon={faFacebookF} /> Facebook</Link>\n          </div>\n          <hr/>\n          <div>\n            <button onClick={changeLogin}>Crea una cuenta</button>\n          </div>\n      </div>}\n    </div>\n  )\n}\n\nexport default Home","import axios from \"axios\"\n\nconst baseURL = process.env.NODE_ENV === `production`? `/api` : \"http://localhost:3000/api\"\nconst service = axios.create({ baseURL, withCredentials: true })\n\nexport const createBook = async bookData => {\n  await service.post(\"/newbook\", bookData)\n  return true\n}\n\nexport const getAllUsersBooks = async page => {\n  const { data: books } = await service.get(`/userbooks/${page}`)\n  return books\n}\n\nexport const getBookDetail = async bookId => {\n  const { data: book } = await service.get(`/detailbook/${bookId}`)\n  return book\n}\n\nexport const updateBook = async (bookId, bookData) => {\n  const { data: book } = await service.put(`/updatebook/${bookId}`, bookData)\n  return book\n}\n\nexport const deleteBook = async bookId => {\n  await service.delete(`/deletebook/${bookId}`)\n}","import axios from \"axios\"\n\nconst baseURL = process.env.NODE_ENV === `production`? `/api` : \"http://localhost:3000/api\"\nconst service = axios.create({ baseURL, withCredentials: true })\n\nexport const createShelf = async shelfData => {\n  await service.post(\"/shelfnew\", shelfData)\n}\n\n\nexport const getOneShelf = async shelfId => {\n  const { data: shelf } = await service.get(`/booksshlef/${shelfId}`)\n  return shelf\n}\n\nexport const getUserShelves = async () => {\n  const { data: shelves } = await service.get(`usershelves`)\n  return shelves\n}\n\nexport const addBookShelf = async (bookId, shelfData) => {\n  const { data: shelf } = await service.put(`addbook/${bookId}`, shelfData)\n  return shelf\n}\n\nexport const removeBookShelf = async (bookId, shelfId) => {\n  await service.put(`removebook/${bookId}`, shelfId)\n}\n\nexport const deleteShelf = async shelfId => {\n  await service.delete(`shelfdelete/${shelfId}`)\n}","import React from 'react'\n\nfunction Loader() {\n  return (\n    <div className=\"loader\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n  )\n}\n\nexport default Loader\n","import React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { getAllUsersBooks } from \"../services/books\"\nimport { createShelf, getOneShelf } from \"../services/shelves\"\nimport useInput from \"../hooks/useInput\"\nimport Loader from \"../components/Loader\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\"\n\nfunction UserHome() {\n  const [books, setBooks] = useState(null)\n  const [shelves, setShelves] = useState(null)\n  const [changePage, setChangePage] = useState(false)\n  const [page, setPage] = useState(1)\n  const [lessbtn, setLessbtn] = useState(false)\n  const [showNewShelf, setShowNewShelf] = useState(false)\n  const [newShlef, setNewShlef] = useState(false)\n  const nameInput = useInput(\"\")\n\n  function pagintationMore(){\n    setPage(page + 1)\n    setChangePage(true)\n    setLessbtn(true)\n    console.log(page)\n  }\n\n  function pagintationLess(){\n    if (page <= 1) setLessbtn(false)\n    else setPage(page - 1)\n    setChangePage(true)\n    console.log(page)\n  }\n\n  async function fetchAllBooks() {\n    const userbooks = await getAllUsersBooks(page)\n    setBooks(userbooks.user.books)\n    setShelves(userbooks.user.shelves)\n  }\n\n  async function fetchBookByShelf(shelfId){\n    const booksByShelf = await getOneShelf(shelfId)\n    setBooks(booksByShelf.books.books)\n   }\n\n  async function submitForm(e){\n    e.preventDefault()\n    await createShelf({\n      name: nameInput.value\n    })\n    setShowNewShelf(false)\n    setNewShlef(true)\n  }\n  \n  function showForm(){\n    if (showNewShelf) setShowNewShelf(false)\n    else setShowNewShelf(true)\n  }\n\n  useEffect(() => {\n    fetchAllBooks()\n    setChangePage(false)\n    setNewShlef(false)\n  }, [changePage, newShlef])\n\n\n  return (\n    <div className=\"userhome\">\n      <div>\n        <h3>Estantes</h3>\n        <ul>\n          {!showNewShelf && <button onClick={showForm}>Agrega un nuevo estante</button>}\n          {showNewShelf && \n            <form onSubmit={submitForm}>\n              <label>Nombre del estante</label>\n              <input required type=\"text\" name=\"name\" id=\"name\" {...nameInput}/>\n              <button type=\"submit\">Crear estante</button>\n              <button onClick={showForm}>Cancelar</button>\n            </form>}\n          <li><Link onClick={fetchAllBooks}><FontAwesomeIcon icon={faBook}/>&nbsp;Todos tus libros</Link></li>\n          {shelves?.map((shelf, i) => (\n          <li key={i}><Link onClick={() => fetchBookByShelf(shelf._id)}><FontAwesomeIcon icon={faBook}/>&nbsp;{shelf.name}</Link></li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <div>\n          <Link to=\"/newbook\">Nuevo libro</Link>\n        </div>\n        <div>\n          {books? books.map((book, i)=> (\n            <div key={i} className=\"bookcard\">\n              <img src={book.cover} alt=\"Book cover\"/>\n              <div>\n                <h4>{book.title}</h4>\n          <p>{book.authorFirstName} {book.authorLastName}</p>\n              </div>\n              <div>\n                <button><Link to={`/detialbook/${book._id}`}>Detalles</Link></button>\n              </div>\n            </div>\n          )) \n          : <Loader></Loader>}\n          {books === [] && <p>Aún no tienes libros</p>}\n        </div>\n          {lessbtn && <button onClick={pagintationLess}>Regresa</button>}\n          {books && <button onClick={pagintationMore}>Ver más libros</button>}\n      </div>\n    </div>\n  )\n}\n\nexport default UserHome\n","import axios from \"axios\"\n\nconst baseURL = process.env.NODE_ENV === `production`? `/api` : \"http://localhost:3000/api\"\nconst service = axios.create({ baseURL, withCredentials: true })\n\nexport const createNote = async (bookId, noteData) => {\n  await service.post(`/note/${bookId}`, noteData)\n  return true\n}\n\nexport const updateNote = async noteData => {\n  const { data: note } = await service.put(\"\", noteData)\n  return note\n}\n\nexport const deleteNote = async noteId => {\n  await service.delete(`/notedelete/${noteId}`)\n}","import axios from \"axios\"\n\nconst baseURL = process.env.NODE_ENV === `production`? `/api` : \"http://localhost:3000/api\"\nconst service = axios.create({ baseURL, withCredentials: true })\n\nexport const createQuote = async (bookId, quoteData) => {\n  await service.post(`/quote/${bookId}`, quoteData)\n  return true\n}\n\nexport const updateQuote = async quoteData => {\n  const { data: quote } = await service.put(\"\", quoteData)\n  return quote\n}\n\nexport const deleteQuote = async quoteId => {\n  await service.delete(`/quotedelete/${quoteId}`)\n}","import React, { useState } from 'react'\nimport useInput from \"../hooks/useInput\"\nimport { createNote } from \"../services/notes\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faFeatherAlt } from \"@fortawesome/free-solid-svg-icons\"\n\n\nfunction NewNote({bookIdToUse, setNewNote}) {\n  const descriptionInput = useInput(\"\")\n  const chapterInput = useInput(\"\")\n  const pagesInput = useInput(\"\")\n  const [showFrom, setShowFrom] = useState(false)\n\n  async function submitForm(e){\n    e.preventDefault()\n    await createNote(bookIdToUse, {\n      description: descriptionInput.value,\n      chapter: chapterInput.value,\n      pages: pagesInput.value\n    })\n    setShowFrom(false)\n    setNewNote(true)\n  }\n\n  function changeForm(){\n    if (!showFrom) setShowFrom(true)\n    else setShowFrom(false)\n  }\n\n  return (\n    <div className=\"newnoteformat\">\n      {!showFrom && <button onClick={changeForm}><FontAwesomeIcon icon={faFeatherAlt}/> Agregar nueva nota</button>}\n      {showFrom && \n        <form onSubmit={submitForm}>\n          <label>Descripción:</label>\n          <textarea required autofocus type=\"text\" name=\"description\" id=\"description\" placeholder=\"Escribe aquí todo lo que quiras guardar sobre el libro...\" {...descriptionInput}></textarea>\n          <div>\n            <div>\n              <label>Capítulo relacionado:&nbsp;</label>\n              <input type=\"text\" name=\"chapter\" id=\"chapter\" placeholder=\"Ejs. Capítulo 1, cap I, Prefacio\" {...chapterInput}></input>\n            </div>\n            <div>\n              <label>Páginas:&nbsp;</label>\n              <input type=\"text\" name=\"pages\" id=\"pages\" placeholder=\"Ejs. 2-4, 7 y 15\"{...pagesInput}></input> \n            </div>\n          </div>\n          <div>\n            <button type=\"submit\"> Crear nota</button>\n            <button onClick={changeForm}>Cancelar</button>\n          </div>\n        </form>\n      }\n    </div>\n  )\n}\n\nexport default NewNote\n","import React, { useState } from 'react'\nimport useInput from \"../hooks/useInput\"\nimport { createQuote } from \"../services/quote\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faFeatherAlt } from \"@fortawesome/free-solid-svg-icons\"\n\n\nfunction NewQuote({bookIdToUse, setNewQuote}) {\n  const descriptionInput = useInput(\"\")\n  const noteInput = useInput(\"\")\n  const pagesInput = useInput(\"\")\n  const [showFrom, setShowFrom] = useState(false)\n\n  async function submitForm(e){\n    e.preventDefault()\n    await createQuote(bookIdToUse, {\n      description: descriptionInput.value,\n      note: noteInput.value,\n      pages: pagesInput.value\n    })\n    setShowFrom(false)\n    setNewQuote(true)\n  }\n\n  function changeForm(){\n    if (!showFrom) setShowFrom(true)\n    else setShowFrom(false)\n  }\n\n  return (\n    <div className=\"newnoteformat\">\n      {!showFrom && <button onClick={changeForm}><FontAwesomeIcon icon={faFeatherAlt}/>Agrega una nueva cita</button>}\n      {showFrom && \n        <form className=\"newquote\" onSubmit={submitForm}>\n          <label>Cita textual:</label>\n          <textarea required type=\"text\" name=\"description\" id=\"description\" placeholder=\"Escribe aquí la cita que quieras guardar, no es necesario ponerla entre comillas\" {...descriptionInput}></textarea>\n          <label>Nota:</label>\n          <textarea type=\"text\" name=\"note\" id=\"note\" placeholder=\"¿Algún pensamiento relacionada a la cita?\" {...noteInput}></textarea>\n          <label>Páginas:</label>\n          <input type=\"text\" name=\"pages\" id=\"pages\" placeholder=\"Ejs. 2-4, 7 y 15\" {...pagesInput}></input>\n          <div className=\"newquote\">\n            <button type=\"submit\"> Crear cita</button>\n            <button onClick={changeForm}>Cancelar</button>\n          </div>\n        </form>\n      }\n    </div>\n  )\n}\n\nexport default NewQuote\n","import React, {useState} from 'react'\n\nfunction Reference({bookData}) {\n  //console.log(bookData)\n  const [referenceAPA, setReferenceAPA] = useState(false)\n  const [referenceMLA, setReferenceMLA] = useState(false)\n  const [referenceChicago, setReferenceChicago] = useState(false)\n  const [referenceUNEISO, setReferenceUNEISO] = useState(false)\n  \n  function showAPA(){\n    setReferenceAPA(true)\n    setReferenceMLA(false)\n    setReferenceChicago(false)\n    setReferenceUNEISO(false)\n    console.log(bookData.publisher)\n  }\n\n  function showMLA(){\n    setReferenceAPA(false)\n    setReferenceMLA(true)\n    setReferenceChicago(false)\n    setReferenceUNEISO(false)\n  }\n\n  function showChicago(){\n    setReferenceAPA(false)\n    setReferenceMLA(false)\n    setReferenceChicago(true)\n    setReferenceUNEISO(false)\n  }\n\n  function showUNEISO(){\n    setReferenceAPA(false)\n    setReferenceMLA(false)\n    setReferenceChicago(false)\n    setReferenceUNEISO(true)\n  }\n\n  return (\n    <div>\n      <p>Selecciona un formato de referencias: </p>\n      <div>\n        <input type=\"radio\" name=\"reference\" value=\"apa\" onChange={showAPA}/>\n        <label for=\"apa\">APA</label>\n        <input type=\"radio\" name=\"reference\" value=\"mla\" onChange={showMLA}/>\n        <label for=\"mla\">MLA</label>\n        <input type=\"radio\" name=\"reference\" value=\"chicago\" onChange={showChicago}/>\n        <label for=\"chicago\">Chicago</label>\n        <input type=\"radio\" name=\"reference\" value=\"UNE-ISO 690 \" onChange={showUNEISO}/>\n        <label for=\"UNE-ISO 690\">UNE-ISO 690 </label>\n      </div>\n      <div>\n        {referenceAPA && <p>{bookData.authorLastName? bookData.authorLastName : \"Apellido\"}, {bookData.authorFirstName? bookData.authorFirstName.charAt(0) : \"Iniciales\"}. ({bookData.published? bookData.published.slice(0, 4) : \"Año de publicación\"}). <em>{bookData.title}</em>. {bookData.publisher === \"\"? bookData.publisher : \"Editorial\"}</p>}\n        {referenceMLA && <p>{bookData.authorLastName? bookData.authorLastName : \"Apellido\"}, {bookData.authorFirstName? bookData.authorFirstName : \"Nombre\"}. <em>{bookData.title}</em>. {bookData.publishPlace? bookData.publishPlace : \"Lugar de publicación\"}: {bookData.publisher === \"\"? bookData.publisher : \"Editorial\"}, {bookData.published? bookData.published.slice(0, 4) : \"Año de publicación\"}. </p>}\n        {referenceChicago && <p>{bookData.authorLastName? bookData.authorLastName : \"Apellido\"}, {bookData.authorFirstName? bookData.authorFirstName : \"Nombre\"}. <em>{bookData.title}</em>. {bookData.publishPlace? bookData.publishPlace : \"Lugar de publicación\"}: {bookData.publisher === \"\"? bookData.publisher : \"Editorial\"}, {bookData.published? bookData.published.slice(0, 4) : \"Año de publicación\"}. </p>}\n  {referenceUNEISO && <p>{bookData.authorLastName? bookData.authorLastName.toUpperCase() : \"Apellido\"}, {bookData.authorFirstName? bookData.authorFirstName : \"Nombre\"}. <em>{bookData.title}.</em> {bookData.publishPlace? bookData.publishPlace : \"Lugar de publicación\"}: {bookData.publisher === \"\"? bookData.publisher : \"Editorial\"}, {bookData.published? bookData.published.slice(0, 4) : \"Año de publicación\"}. ISBN: {bookData.ISBN? bookData.ISBN : \"ISBN\"}</p>}\n      </div>\n    </div>\n  )\n}\n\nexport default Reference\n","import React, { useState, useEffect } from 'react'\nimport { addBookShelf, getUserShelves, removeBookShelf } from \"../services/shelves\"\nimport useInput from \"../hooks/useInput\"\n\nfunction ShelvesInBook({shelves, bookId, setNewShelf}) {\n  const nameIpunt = useInput(\"\")\n  const [showAddShelf, setShowAddShelf] = useState(false)\n  const [allUserShelves, setAllUserShelves] = useState(null)\n\n  function formatAddShelf(){\n    if (!showAddShelf) setShowAddShelf(true)\n    else setShowAddShelf(false)\n  }\n\n  async function fetchUsersShelves(){\n    const userShelves = await getUserShelves()\n    setAllUserShelves(userShelves.shelves.shelves)\n  }\n\n  async function removeBook(shelfId){\n    await removeBookShelf(bookId, {\n      shelfId\n    })\n    setNewShelf(true)\n  }\n\n  async function submitForm(e){\n    e.preventDefault()\n    await addBookShelf(bookId, {\n      shelfId: nameIpunt.value\n    })\n    setShowAddShelf(false)\n    setNewShelf(true)\n  }\n\n  useEffect(() => {\n    fetchUsersShelves()\n  }, [])\n\n  return (\n    <div>\n      \n    {!showAddShelf && \n      <div>\n        {shelves? shelves.map((e, i)=>(\n          <>\n            <p>{e.name}</p>\n            <button onClick={() => removeBook(e._id)}>Quitar estante</button>\n          </>\n        ))\n       \n    : <p>Aún no tienes estantes</p>}\n    <button onClick={formatAddShelf}>Añade el libro a un estante</button>\n    </div>}\n       \n    {showAddShelf && \n    <form onSubmit={submitForm}>\n      <label>Añade a un estante</label>\n      <select required name=\"shelf\" {...nameIpunt}>\n        <option value=\"\" selected>Selecciona un estante</option>\n        {allUserShelves?.map((e, i) => (\n          <option value={e._id}> {e.name}</option>\n        ))}\n      </select>\n        <button type=\"submit\">Añade libro</button>\n    </form>}\n    </div>\n  )\n}\n\nexport default ShelvesInBook\n","import React, {useState, useEffect} from 'react'\nimport { Link, useHistory } from \"react-router-dom\"\nimport { deleteBook, updateBook } from \"../services/books\"\nimport ShelvesInBook from \"./ShelvesInBook\"\nimport axios from \"axios\"\nimport useInput from \"../hooks/useInput\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\n\n\nfunction BookCardDetail({book, setUpdateBook, bookShelves, bookId, setNewShelf}) {\n  const [showForm, setShowForm] = useState(false)\n  const history = useHistory()\n  const titleInput = useInput(book.title)\n  const authorFirstNameInput = useInput(book.authorFirstName)\n  const authorLastNameInput = useInput(book.authorLastName)\n  const publisherInput = useInput(book.publisher)\n  const publishedInput = useInput(book.published)\n  const editionInput = useInput(book.edition)\n  const ISBNInput = useInput(book.ISBN)\n  const publishPlaceInput = useInput(book.publishPlace)\n  const pagesInput = useInput(book.pages)\n  const formatInput = useInput(\"\")\n  const descriptionInput = useInput(book.description)\n  const [coverURL, setCoverURL] = useState(book.cover)\n\n  async function eliminateBook(){\n    await deleteBook(book._id)\n    history.push(\"/userhome\")\n  }\n\n  function editForm(){\n    if (!showForm) setShowForm(true)\n    else setShowForm(false)\n  }\n\n  async function uploadCover({ target: { files } }){\n    const data = new FormData()\n    data.append(\"file\", files[0])\n    data.append(\"upload_preset\", \"all_my_books\")\n\n    const { data: { secure_url } } = await axios.post(process.env.REACT_APP_CLOUDINARY_URL, data)\n    setCoverURL(secure_url)\n  }\n\n  async function submitForm(e){\n    e.preventDefault()\n    await updateBook(book._id, {\n      title: titleInput.value,\n      authorFirstName: authorFirstNameInput.value,\n      authorLastName: authorLastNameInput.value,\n      publisher: publisherInput.value,\n      published: publishedInput.value,\n      edition: editionInput.value,\n      ISBN: ISBNInput.value,\n      publishPlace: publishPlaceInput.value,\n      pages: pagesInput.value,\n      format: formatInput.value,\n      description: descriptionInput.value,\n      cover: coverURL\n    })\n    setShowForm(false)\n    setUpdateBook(true)\n  }\n  \n\n  return (\n    <div className=\"bookDetailCard\">\n        {!showForm && \n        <>\n        <div>\n          <div>\n            <img src={book.cover} alt=\"Book cover\"/>\n          </div>\n            <div>\n            <button onClick={editForm}> <FontAwesomeIcon icon={ faEdit }/>&nbsp;<Link>Editar libro</Link></button>\n            <button onClick={eliminateBook}> <FontAwesomeIcon icon={ faTrashAlt }/>&nbsp; <Link to= \"\">Eliminar libro</Link></button>\n          </div>\n        </div>\n        <div>\n          <h2>{book.title}</h2>\n          <h3>{book.authorFirstName} {book.authorLastName}</h3>\n          <p><b>Editorial:</b> {book.publisher}</p>\n          <p><b>Año de publicación:</b> {book.published?.slice(0,4)}</p>\n          <p><b>Lugar de publicación:</b> {book.publishPlace}</p>\n          <p><b>Edición:</b> {book.edition}</p>\n          <p><b>Formato:</b> {book.format?.toLowerCase()}</p>\n          <p><b>Número de páginas:</b> {book.pages}</p>\n          <p><b>ISBN:</b> {book.ISBN}</p>\n        </div>\n        <div>\n          <div>\n            <p><b>Reseña:</b></p>\n            <p>{book.description}</p>\n          </div>\n          <div>\n            <p><b>Estantes: </b></p>\n            <ShelvesInBook shelves={bookShelves} bookId={bookId} setNewShelf={setNewShelf}></ShelvesInBook>\n          </div>\n        </div>\n        </>}\n        \n        {showForm &&\n        <>\n        <div>\n          <div>\n            <img src={book.cover} alt=\"Book cover\"/>\n          </div>\n            <div>\n            <button onClick={editForm}><Link>Cancelar</Link></button>\n          </div>\n        </div>\n        <form onSubmit={submitForm}>\n        <label>Título</label>\n        <input required type=\"text\" name=\"title\" id=\"title\" {...titleInput}/>\n        <br/>\n        <label>Nombre del autor(a)</label>\n        <input type=\"text\" name=\"authorFirstName\" id=\"authorFirstName\" {...authorFirstNameInput}/>\n        <br/>\n        <label>Apellido del autor(a)</label>\n        <input type=\"text\" name=\"authorLastName\" id=\"authorLastName\" {...authorLastNameInput}/>\n        <br/>\n        <label>Editorial</label>\n        <input type=\"text\" name=\"publisher\" id=\"publisher\" {...publisherInput}/>\n        <br/>\n        <label>Año de publicación</label>\n        <input type=\"text\" name=\"published\" id=\"published\" {...publishedInput}/>\n        <br/>\n        <label>Edición</label>\n        <input type=\"text\" name=\"edition\" id=\"edition\" {...editionInput}/>\n        <br/>\n        <label>ISBN</label>\n        <input type=\"text\" name=\"ISBN\" id=\"ISBN\" {...ISBNInput}/>\n        <br/>\n        <label>Lugar de publicación</label>\n        <input type=\"text\" name=\"publishPlace\" id=\"publishPlace\" {...publishPlaceInput}/>\n        <br/>\n        <label>Páginas</label>\n        <input type=\"text\" name=\"pages\" id=\"pages\" {...pagesInput}/>\n        <br/>\n        <br/>\n        <label>Descripción</label>\n        <input type=\"text\" name=\"description\" id=\"description\" {...descriptionInput}/>\n        <br/>\n        <label>Formato</label>\n        <select required name=\"format\" {...formatInput}>\n          <option value=\"\" selected>Selecciona una opción</option>\n          <option value=\"TAPA BLANDA\">Tapa blanda</option>\n          <option value=\"TAPA DURA\">Tapa dura</option>\n          <option value=\"EBOOK \">Ebook</option>\n        </select>\n        <label>Portada</label>\n        <input type=\"file\" onChange={uploadCover}/>\n        <br/>\n        <button type=\"submit\">Editar libro</button>\n      </form>\n        </>}\n    </div>\n  )\n}\n\nexport default BookCardDetail\n","import React, { useState, useEffect } from 'react'\nimport Loader from \"../components/Loader\"\nimport { getBookDetail } from \"../services/books\"\nimport { deleteNote } from \"../services/notes\"\nimport { deleteQuote } from \"../services/quote\"\nimport NewNote from \"../components/NewNote\"\nimport NewQuote from \"../components/NewQuote\"\nimport Reference from \"../components/Reference\"\nimport BookCardDetail from \"../components/BookCardDetail\"\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faFileAlt, faBookmark, faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\"\n\nfunction BookDetail({ match: { params: { bookId } }}) {\n  const [book, setBook] = useState(null)\n  const [notes, setNotes] = useState(true)\n  const [quotes, setQuotes] = useState(false)\n  const [references, setReferences] = useState(false)\n  const [allNotes, setAllNotes] = useState(null)\n  const [allQuotes, setAllQuotes] = useState(null)\n  const [allShelves, setAllShelves] = useState(null)\n  const [newNote, setNewNote] = useState(false)\n  const [newQuote, setNewQuote] = useState(false)\n  const [newShelf, setNewShelf] = useState(false)\n  const [updateBook, setUpdateBook] = useState(false)\n\n  async function fetchBook() {\n    const detailbook = await getBookDetail(bookId)\n    setBook(detailbook.book)\n    setAllNotes(detailbook.book.notes)\n    setAllQuotes(detailbook.book.quotes)\n    setAllShelves(detailbook.book.bookshelves)\n  }\n\n  async function eliminateNote(id){\n    await deleteNote(id)\n    setNewNote(true)\n  }\n\n  async function eliminateQuote(id){\n    await deleteQuote(id)\n    setNewQuote(true)\n  }\n\n  function showNotes(){\n    setNotes(true)\n    setQuotes(false)\n    setReferences(false)\n  }\n\n  function showQuotes(){\n    setNotes(false)\n    setQuotes(true)\n    setReferences(false)\n  }\n\n  function showReferences(){\n    setNotes(false)\n    setQuotes(false)\n    setReferences(true)\n  }\n\n  useEffect(() => {\n    fetchBook()\n    setNewNote(false)\n    setNewQuote(false)\n    setUpdateBook(false)\n    setNewShelf(false)\n  }, [newNote, newQuote, updateBook, newShelf])\n\n  return (\n    <div className=\"bookdetail\">\n        {book? \n        <>\n          <BookCardDetail book={book} setUpdateBook={setUpdateBook} bookShelves={allShelves} bookId={bookId} setNewShelf={setNewShelf}></BookCardDetail>\n          <div className=\"notesbook\">\n            <Link onClick={showNotes}><FontAwesomeIcon icon={faBookmark}/>&nbsp;Notas</Link>\n            <Link onClick={showQuotes}><FontAwesomeIcon icon={faQuoteLeft}/>&nbsp;Citas</Link>\n            <Link onClick={showReferences}><FontAwesomeIcon icon={faFileAlt}/>&nbsp;Referencia</Link>\n            {notes && \n              <div className=\"notescards\">\n                <NewNote bookIdToUse={bookId} setNewNote={setNewNote}></NewNote>\n                {allNotes? allNotes.map((note, i) => (\n                  <div className=\"onenotecard\" key={i}>\n                    <p>{note.chapter}</p>\n                    {note.pages && <p>Página(s): {note.pages}</p>}\n                    <p>{note.description}</p>\n                    <button onClick={()=>{eliminateNote(note._id)}}>Eliminar nota</button>\n                  </div> \n                )) : <p>Agrega tus notas sobre el libro</p>}\n              </div>}\n            {quotes && \n              <div className=\"notescards\">\n                <NewQuote bookIdToUse={bookId} setNewQuote={setNewQuote}></NewQuote>\n                {allQuotes?.map((quote, i) => (\n                  <div className=\"onenotecard\" key={i}>\n                    <p>«{quote.description}»</p>\n                    {quote.pages && <p>Página(s): {quote.pages}</p>}\n                    {quote.note && <p>Nota: {quote.note}</p>}\n                    <button onClick={()=>{eliminateQuote(quote._id)}}>Eliminar nota</button>\n                  </div> \n                ))}\n                </div>}\n            {references && \n              <div className=\"notescards\">Referencias\n                <Reference bookData={book}></Reference>\n              </div>}\n          </div>\n          </>\n        : <Loader></Loader>}\n    </div>\n  )\n}\n\nexport default BookDetail\n","import React, { useState } from 'react'\nimport { createBook } from \"../services/books\"\nimport useInput from \"../hooks/useInput\"\nimport axios from \"axios\"\n\nfunction NewBook({ history }) {\n  const titleInput = useInput(\"\")\n  const authorFirstNameInput = useInput(\"\")\n  const authorLastNameInput = useInput(\"\")\n  const publisherInput = useInput(\"\")\n  const publishedInput = useInput(\"\")\n  const editionInput = useInput(\"\")\n  const ISBNInput = useInput(\"\")\n  const publishPlaceInput = useInput(\"\")\n  const pagesInput = useInput(\"\")\n  const formatInput = useInput(\"\")\n  const descriptionInput = useInput(\"\")\n  const [imageURL, setImageURL] = useState(\"https://res.cloudinary.com/dxncdwsau/image/upload/v1601179377/All%20My%20Books/All_My_Books_fwa6ma.jpg\")\n\n  async function uploadCover({ target: { files } }){\n    const data = new FormData()\n    data.append(\"file\", files[0])\n    data.append(\"upload_preset\", \"all_my_books\")\n    const { data: { secure_url } } = await axios.post(process.env.REACT_APP_CLOUDINARY_URL, data)\n    setImageURL(secure_url)\n  }\n\n  async function submitForm(e){\n    e.preventDefault()\n    await createBook({\n      title: titleInput.value,\n      authorFirstName: authorFirstNameInput.value,\n      authorLastName: authorLastNameInput.value,\n      publisher: publisherInput.value,\n      published: publishedInput.value,\n      edition: editionInput.value,\n      ISBN: ISBNInput.value,\n      publishPlace: publishPlaceInput.value,\n      pages: pagesInput.value,\n      format: formatInput.value,\n      description: descriptionInput.value,\n      cover: imageURL\n    })\n    history.push(\"/userhome\")\n  }\n\n  return (\n    <div className=\"newbook\">\n      <h2>Crea un nuevo libro</h2>\n      <form onSubmit={submitForm}>\n        <label>Título</label>\n        <input required type=\"text\" name=\"title\" id=\"title\" {...titleInput}/>\n        <br/>\n        <label>Nombre del autor(a)</label>\n        <input type=\"text\" name=\"author\" id=\"author\" {...authorFirstNameInput}/>\n        <br/>\n        <label>Apellido del autor(a)</label>\n        <input type=\"text\" name=\"author\" id=\"author\" {...authorLastNameInput}/>\n        <br/>\n        <label>Editorial</label>\n        <input type=\"text\" name=\"publisher\" id=\"publisher\" {...publisherInput}/>\n        <br/>\n        <label>Año de publicación</label>\n        <input type=\"text\" name=\"published\" id=\"published\" {...publishedInput}/>\n        <br/>\n        <label>Edición</label>\n        <input type=\"text\" name=\"edition\" id=\"edition\" {...editionInput}/>\n        <br/>\n        <label>ISBN</label>\n        <input type=\"text\" name=\"ISBN\" id=\"ISBN\" {...ISBNInput}/>\n        <br/>\n        <label>Lugar de publicación</label>\n        <input type=\"text\" name=\"publishPlace\" id=\"publishPlace\" {...publishPlaceInput}/>\n        <br/>\n        <label>Páginas</label>\n        <input type=\"text\" name=\"pages\" id=\"pages\" {...pagesInput}/>\n        <br/>\n        <br/>\n        <label>Descripción</label>\n        <input type=\"text\" name=\"description\" id=\"description\" {...descriptionInput}/>\n        <br/>\n        <label>Formato</label>\n        <select required name=\"format\" {...formatInput}>\n          <option value=\"\" selected>Selecciona una opción</option>\n          <option value=\"TAPA BLANDA\">Tapa blanda</option>\n          <option value=\"TAPA DURA\">Tapa dura</option>\n          <option value=\"EBOOK \">Ebook</option>\n        </select>\n        <label>Portada</label>\n        <input type=\"file\" onChange={uploadCover}/>\n        <br/>\n        <button type=\"submit\"> Crear libro</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Context } from \"../context\"\nimport { Link } from \"react-router-dom\"\nimport { updateUser } from \"../services/auth\"\nimport axios from \"axios\"\nimport useInput from \"../hooks/useInput\"\nimport { getUserShelves } from \"../services/shelves\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {faEdit } from \"@fortawesome/free-solid-svg-icons\"\n\nfunction UserConfig() {\n  const { user } = useContext(Context)\n  const usernameInput = useInput(user?.username)\n  const emailInput = useInput(user?.email)\n  const [photoURL, setPhotoURL] = useState(user?.profilePhoto)\n  const [showForm, setShowForm] = useState(false)\n  const [shelves, setShelves] = useState(null)\n  const [shelvesConfig, setShelvesConfig] = useState(false)\n  const [showShelvesConfig, setShowShelvesConfig] = useState(false)\n  const shelfNameInput = useInput(shelves?.name)\n\n\n  async function fetchShelves(){\n    const shlevesData = await getUserShelves()\n    setShelves(shlevesData.shelves.shelves)\n  }\n\n  function shelvesForm(){\n    if (!showShelvesConfig) setShowShelvesConfig(true)\n    else setShowShelvesConfig(false)\n  }\n\n  function editForm(){\n    if (!showForm) setShowForm(true)\n    else setShowForm(false)\n  }\n\n  async function uploadPhoto({ target: { files } }){\n    const data = new FormData()\n    data.append(\"file\", files[0])\n    data.append(\"upload_preset\", \"all_my_books\")\n\n    const { data: { secure_url } } = await axios.post(process.env.REACT_APP_CLOUDINARY_URL, data)\n    setPhotoURL(secure_url)\n  }\n\n  async function submitForm(e){\n    e.preventDefault()\n    await updateUser(\n    {\n      username: usernameInput.value,\n      email: emailInput.value,\n      profilePhoto: photoURL\n    })\n    console.log(usernameInput.value)\n    setShowForm(false)\n  }\n\n  useEffect(() => {\n    fetchShelves()\n  }, [])\n\n  return (\n    <div className=\"userProfile\">\n        {!showForm && user?\n        <>\n        <div>\n          <div>\n            <img src={user.profilePhoto} alt=\"Profile\"/>\n          </div>\n            <div>\n            <button onClick={editForm}> <FontAwesomeIcon icon={ faEdit }/>&nbsp;<Link>Editar</Link></button>\n          </div>\n        </div>\n        <div>\n          <h2>{user.username}</h2>\n          <h3>{user.email}</h3>\n        </div>\n        {!showShelvesConfig && \n        <div>\n          <p><b>Estantes:</b></p>\n          <ul>\n            {shelves? shelves.map((shlef, i) => (\n              <li>{shlef.name}</li>\n            )) : <p>Aún no tienes estantes</p>}\n          </ul>\n          <button onClick={shelvesForm}>Edita tus estantes</button>\n        </div> }\n        \n        {showShelvesConfig && \n          <>\n          <form>\n            {shelves?.map((shelf, i) => (\n              <>\n              <label>{shelves.name}</label>\n              <input type=\"text\" name=\"name\" id=\"name\" {...shelfNameInput} />\n              </>\n            ))}\n          </form>\n          <button onClick={shelvesForm}>Cancelar</button>\n          </>}\n        \n        \n        </>: <></>}\n        \n        {showForm && user?\n        <>\n        <div>\n          <div>\n            <img src={user.profilePhoto} alt=\"Profile\"/>\n          </div>\n            <div>\n            <button onClick={editForm}><Link>Cancelar</Link></button>\n          </div>\n        </div>\n        <form onSubmit={submitForm}>\n        <label>Nombre de usuario: </label>\n        <input required type=\"text\" name=\"username\" id=\"username\" {...usernameInput}/>\n        <br/>\n        <label>Email: </label>\n        <input type=\"text\" name=\"email\" id=\"email\" {...emailInput}/>\n        <label>Foto de perfil: </label>\n        <input type=\"file\" onChange={uploadPhoto}/>\n        <button type=\"submit\">Editar libro</button>\n      </form>\n        </> : <></>}\n    </div>\n  )\n}\n\nexport default UserConfig\n","import React from \"react\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport Layout from \"./components/Layout\"\nimport Home from \"./pages/Home\"\nimport UserHome from \"./pages/UserHome\"\nimport BookDetail from \"./pages/BookDetail\"\nimport NewBook from \"./pages/NewBook\"\nimport UserConfig from \"./pages/UserConfig\"\n\n\n//const Home = () => <h1>Home</h1>\n//const UserHome = () => <h1>User Home</h1>\n//const NewBook = () => <h1>New Book</h1>\n//const BookDetail = () => <h1>Book Detail</h1>\n//const UserConfig = () => <h1>Profile Cofiguration</h1>\n//const EditBook = () => <h1>Update Book</h1>\n\nconst Router = () => {\n  return(\n    <BrowserRouter>\n      <Switch>\n        <Route component={Home} path=\"/\" exact/>\n        <Layout>\n          <Route component={UserHome} path=\"/userhome\" exact/>\n          <Route component={NewBook} path=\"/newbook\" exact/>\n          <Route component={BookDetail} path=\"/detialbook/:bookId\" exact/>\n          <Route component={UserConfig} path=\"/userconfig\" exact/>\n        </Layout>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Router","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Router from \"./router\"\nimport CtxProvider from \"./context\"\n\nReactDOM.render(\n  <CtxProvider>\n    <Router />\n  </CtxProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}