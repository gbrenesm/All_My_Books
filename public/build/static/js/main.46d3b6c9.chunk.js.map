{"version":3,"sources":["serviceWorker.js","services/auth.js","context.js","components/Layout.js","hooks/useInput.js","pages/Home.js","services/books.js","services/shelves.js","components/Loader.js","pages/UserHome.js","services/notes.js","services/quote.js","components/NewNote.js","components/NewQuote.js","components/Reference.js","components/ShelvesInBook.js","components/BookCardDetail.js","pages/BookDetail.js","pages/NewBook.js","pages/UserConfig.js","router.js","index.js"],"names":["Boolean","window","location","hostname","match","service","axios","create","baseURL","withCredentials","signup","user","a","post","login","userData","data","getCurrentUser","get","updateUser","put","logout","Context","createContext","CtxProvider","children","useState","setUser","useEffect","userdata","Provider","value","ctxUser","loginUser","clearctxUser","Layout","useContext","history","useHistory","logoutClick","push","src","alt","to","className","profilePhoto","icon","faAngleDown","onClick","useInput","initialValue","setValue","onChange","e","target","Home","usernameInput","emailInput","passwordInput","signupForm","setsignupForm","preventDefault","username","email","password","catch","err","console","dir","response","message","swal","title","text","type","then","changeLogin","onSubmit","required","name","id","href","faGoogle","faFacebookF","createBook","bookData","getAllUsersBooks","books","getAllUserBooksAuthor","getBookDetail","bookId","book","updateBook","deleteBook","delete","createShelf","shelfData","getOneShelf","shelfId","shelf","getUserShelves","shelves","addBookShelf","removeBookShelf","Loader","UserHome","setBooks","setShelves","changePage","setChangePage","elemPages","setElemPages","cutElem","setCutElem","lessBtn","setLessbtn","moreBtn","setMoreBtn","showNewShelf","setShowNewShelf","newShlef","setNewShlef","nameInput","searchInput","fetchAllBooks","userbooks","length","booksByShelf","submitSearch","filter","toLowerCase","includes","authorFirstName","authorLastName","showForm","faPlus","faBook","map","i","key","fetchBookByShelf","_id","placeholder","faSearch","cover","coAuthorFirstName","coAuthorLastName","createNote","noteData","deleteNote","noteId","createQuote","quoteData","deleteQuote","quoteId","NewNote","bookIdToUse","setNewNote","descriptionInput","chapterInput","pagesInput","showFrom","setShowFrom","description","chapter","pages","changeForm","faFeatherAlt","autofocus","NewQuote","setNewQuote","noteInput","note","Reference","referenceAPA","setReferenceAPA","referenceMLA","setReferenceMLA","referenceChicago","setReferenceChicago","referenceUNEISO","setReferenceUNEISO","for","charAt","published","slice","publisher","publishPlace","toUpperCase","ISBN","ShelvesInBook","setNewShelf","nameIpunt","showAddShelf","setShowAddShelf","allUserShelves","setAllUserShelves","formatAddShelf","userShelves","fetchUsersShelves","removeBook","faTrash","selected","BookCardDetail","setUpdateBook","bookShelves","setShowForm","titleInput","authorFirstNameInput","authorLastNameInput","coAuthorFirstNameInput","coAuthorLastNameInput","publisherInput","publishedInput","editionInput","edition","ISBNInput","publishPlaceInput","formatInput","coverURL","setCoverURL","coauthor","setcoauthor","editForm","files","FormData","append","secure_url","format","faEdit","buttons","confirmEliminate","faTrashAlt","BookDetail","params","setBook","notes","setNotes","quotes","setQuotes","references","setReferences","allNotes","setAllNotes","allQuotes","setAllQuotes","allShelves","setAllShelves","newNote","newQuote","newShelf","detailbook","bookshelves","fetchBook","faBookmark","faQuoteLeft","faFileAlt","eliminateNote","quote","eliminateQuote","NewBook","imageURL","setImageURL","autoFocus","faBookOpen","UserConfig","photoURL","setPhotoURL","showShelvesConfig","setShowShelvesConfig","shelfNameInput","shlevesData","shelvesForm","log","fetchShelves","shlef","Router","component","path","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.46d3b6c9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\"\n\nconst baseURL = process.env.NODE_ENV === `production`? `/auth` : \"http://localhost:3000/auth\"\n\nconst service = axios.create({ baseURL, withCredentials: true })\n\nexport const signup = async user => {\n  await service.post(\"/signup\", user)\n  return true\n}\n\nexport const login = async userData => {\n  const { data: user } = await service.post(\"/login\", userData)\n  return user\n}\n\n\nexport const getCurrentUser = async () => {\n  const { data: user } = await service.get(\"/currentuser\")\n  return user\n}\n\nexport const updateUser = async userData => {\n  const { data: user } = await service.put(\"/updateuser\", userData)\n  return user\n}\n\nexport const logout = async () => {\n  await service.get(\"/logout\")\n}\n","import React, { createContext, useState, useEffect } from \"react\"\nimport { getCurrentUser } from \"./services/auth\"\n\nexport const Context = createContext()\n\nexport default function CtxProvider({ children }){\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    async function userdata() {\n      const { user } = await getCurrentUser()\n      setUser(user)\n    }\n    userdata()\n  },[])\n\n  const ctxUser = loginUser => setUser(loginUser)\n  const clearctxUser = () => setUser(null)\n\n  return (\n    <Context.Provider value={{\n      user,\n      ctxUser,\n      clearctxUser\n    }}>\n      {children}\n    </Context.Provider>\n  )\n}","import React, { useContext } from 'react'\nimport { Context } from \"../context\"\nimport { Link } from \"react-router-dom\"\nimport { logout } from \"../services/auth\"\nimport { useHistory } from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\"\n\nfunction Layout({ children }) {\n  const { user, clearctxUser} = useContext(Context)\n  \n  const history = useHistory()\n\n  const logoutClick = async () =>{\n    await logout()\n    clearctxUser()\n    history.push(\"/\")\n  }\n\n\n  return (\n    <div>\n      <nav>\n        <div>\n          <p><img src=\"https://res.cloudinary.com/dxncdwsau/image/upload/v1600963193/All_My_Books/%C3%8Dcono_de_libros_blanco_hajncl.png\" alt=\"Books icon\"/>&nbsp; <Link to=\"/userhome\">All My Books</Link></p>\n        </div>\n        <div>\n          <ul>\n          <li><Link to=\"/newbook\">Agregar libro</Link></li>\n            <li className=\"navicon\"><img src={user?.profilePhoto} alt=\"User\"/>&nbsp;<FontAwesomeIcon icon={faAngleDown}/>\n              <ul>\n                <li><Link to=\"/userconfig\">Configuración</Link></li>\n                <li onClick={logoutClick}><Link>Cerrar sesión</Link></li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <main>\n        {children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout\n","import { useState } from \"react\"\n\nexport default function useInput(initialValue){\n  const [value, setValue] = useState(initialValue)\n\n  function onChange(e){\n    setValue(e.target.value)\n  }\n\n  return{\n    value,\n    onChange\n  }\n}","import React, { useState, useContext } from \"react\"\nimport { Context } from \"../context\"\nimport useInput from \"../hooks/useInput\"\nimport { signup, login } from \"../services/auth\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGoogle, faFacebookF } from \"@fortawesome/free-brands-svg-icons\"\nimport { Link } from \"react-router-dom\"\nimport swal from \"sweetalert\"\n\nlet baseURL\n\nprocess.env.NODE_ENV === \"production\"\n? (baseURL = \"https://allmybooksmex.herokuapp.com\")\n: (baseURL = \"http://localhost:3000\")\n\n\nfunction Home ({ history }) {\n  const { ctxUser } = useContext(Context)\n  const usernameInput = useInput(\"\")\n  const emailInput = useInput(\"\")\n  const passwordInput = useInput(\"\")\n  const [signupForm, setsignupForm] = useState(true)\n\n\n\n  async function submitFormSignup(e){\n    e.preventDefault()\n    const username = usernameInput.value\n    const email = emailInput.value\n    const password = passwordInput.value\n    await signup({username, email, password})\n    .catch(err => {\n      console.dir(err.response.data.message)\n      swal({\n        title: \"Vuelve a intentar\",\n        text: err.response.data.message,\n        type: \"error\",\n        icon: \"error\",\n        className: \"alert\"\n      })})\n    .then(setsignupForm(false))\n  }\n\n  async function submitFormLogin(e){\n    e.preventDefault()\n    const email = emailInput.value\n    const password = passwordInput.value\n    const user = await login({email, password}).catch(err => {\n      console.dir(err.response.data.message)\n      swal({\n        title: \"Vuelve a intentar\",\n        text: err.response.data.message, \n        type: \"error\",\n        icon: \"error\",\n        className: \"alert\"\n      })})\n    history.push(\"/userhome\")\n    ctxUser(user)\n  }\n  \n\n  function changeLogin(){\n    if (signupForm) setsignupForm(false)\n    else setsignupForm(true)\n  }\n\n\n  return(\n    <div className=\"homepage\">\n      <div>\n        <h1>All My Books</h1>\n        <h2>El lugar para ordenar todos tus libros</h2>\n        <img src=\"https://res.cloudinary.com/dxncdwsau/image/upload/v1600883938/All_My_Books/Book_shelf_warm_colors_omdjq1.jpg\" alt=\"Bookshelf by colors\"/>\n      </div>\n      {signupForm && \n      <div>\n        <h2>Crea una cuenta</h2>\n          <form onSubmit={submitFormSignup}>\n            <label>Nombre de usuario: </label>\n            <br/>\n            <input required type=\"text\" name=\"username\" id=\"username\" {...usernameInput}/>\n            <br/>\n            <label>Email:</label>\n            <br/>\n            <input required type=\"text\" name=\"email\" id=\"email\" {...emailInput}/>\n            <br/>\n            <label>Contraseña:</label>\n            <br/>\n            <input required type=\"password\" name=\"password\" id=\"password\" {...passwordInput}/>\n            <br/>\n            <button type=\"submit\">Crea tu cuenta</button>\n          </form>\n          <div>\n            <a href={`${baseURL}/auth/google`}><FontAwesomeIcon icon={faGoogle} /> &nbsp;Google</a>\n            <Link><FontAwesomeIcon icon={faFacebookF} />&nbsp;Facebook</Link>\n          </div>\n          <hr/>\n          <div className=\"signupbtn\">\n            <p>¿Ya tienes cuenta?</p> <button onClick={changeLogin}>Inicia sesión</button>\n          </div>\n      </div>}\n      {!signupForm && \n      <div>\n        <h2>Inicia sesión</h2>\n          <form onSubmit={submitFormLogin}>\n            <label>Email</label>\n            <input required type=\"text\" name=\"email\" id=\"email\" {...emailInput}/>\n            <label>Contraseña</label>\n            <input required type=\"password\" name=\"password\" id=\"password\" {...passwordInput}/>\n            <button type=\"submit\">Inicia sesión</button>\n\n          </form>\n          <div>\n            <Link><FontAwesomeIcon icon={faGoogle} /> &nbsp;Google</Link>\n            <Link><FontAwesomeIcon icon={faFacebookF} />&nbsp;Facebook</Link>\n          </div>\n          <hr/>\n          <div>\n            <button onClick={changeLogin}>Crea una cuenta</button>\n          </div>\n      </div>}\n    </div>\n  )\n}\n\nexport default Home","import axios from \"axios\"\n\nconst baseURL = process.env.NODE_ENV === `production`? `/api` : \"http://localhost:3000/api\"\nconst service = axios.create({ baseURL, withCredentials: true })\n\nexport const createBook = async bookData => {\n  await service.post(\"/newbook\", bookData)\n  return true\n}\n\nexport const getAllUsersBooks = async () => {\n  const { data: books } = await service.get(`/userbooks`)\n  return books\n}\n\nexport const getAllUserBooksAuthor = async () =>{\n  const { data: books } = await service.get(`/userbooksauthor`)\n  return books\n}\n\nexport const getBookDetail = async bookId => {\n  const { data: book } = await service.get(`/detailbook/${bookId}`)\n  return book\n}\n\nexport const updateBook = async (bookId, bookData) => {\n  const { data: book } = await service.put(`/updatebook/${bookId}`, bookData)\n  return book\n}\n\nexport const deleteBook = async bookId => {\n  await service.delete(`/deletebook/${bookId}`)\n}","import axios from \"axios\"\n\nconst baseURL = process.env.NODE_ENV === `production`? `/api` : \"http://localhost:3000/api\"\nconst service = axios.create({ baseURL, withCredentials: true })\n\nexport const createShelf = async shelfData => {\n  await service.post(\"/shelfnew\", shelfData)\n}\n\n\nexport const getOneShelf = async shelfId => {\n  const { data: shelf } = await service.get(`/booksshlef/${shelfId}`)\n  return shelf\n}\n\nexport const getUserShelves = async () => {\n  const { data: shelves } = await service.get(`usershelves`)\n  return shelves\n}\n\nexport const addBookShelf = async (bookId, shelfData) => {\n  const { data: shelf } = await service.put(`addbook/${bookId}`, shelfData)\n  return shelf\n}\n\nexport const removeBookShelf = async (bookId, shelfId) => {\n  await service.put(`removebook/${bookId}`, shelfId)\n}\n\nexport const deleteShelf = async shelfId => {\n  await service.delete(`shelfdelete/${shelfId}`)\n}","import React from 'react'\n\nfunction Loader() {\n  return (\n    <div className=\"loader\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n  )\n}\n\nexport default Loader\n","import React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { getAllUsersBooks, getAllUserBooksAuthor } from \"../services/books\"\nimport { createShelf, getOneShelf } from \"../services/shelves\"\nimport useInput from \"../hooks/useInput\"\nimport Loader from \"../components/Loader\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faBook, faPlus, faSearch } from \"@fortawesome/free-solid-svg-icons\"\n\nfunction UserHome() {\n  const [books, setBooks] = useState(null)\n  const [shelves, setShelves] = useState(null)\n  const [changePage, setChangePage] = useState(false)\n  const [elemPages, setElemPages] = useState(12)\n  const [cutElem, setCutElem] = useState(0)\n  const [lessBtn, setLessbtn] = useState(false)\n  const [moreBtn, setMoreBtn] = useState(false)\n  const [showNewShelf, setShowNewShelf] = useState(false)\n  const [newShlef, setNewShlef] = useState(false)\n  const nameInput = useInput(\"\")\n  const searchInput = useInput(\"\")\n\n  function pagesBtn(){\n    \n  }\n\n  function pagintationMore(){\n    setCutElem(cutElem + 12)\n    setElemPages(elemPages + 12)\n    setChangePage(true)\n    setLessbtn(true)\n  }\n\n  function pagintationLess(){\n    setCutElem(cutElem - 12)\n    setElemPages(elemPages - 12)\n    setChangePage(true)\n  }\n\n  async function fetchAllBooks() {\n    const userbooks = await getAllUsersBooks()\n    setBooks(userbooks.user.books)\n    setShelves(userbooks.user.shelves)\n    if (userbooks.user.books.length >= 12) setMoreBtn(true)\n  }\n\n  async function fetchBookByShelf(shelfId){\n    const booksByShelf = await getOneShelf(shelfId)\n    setBooks(booksByShelf.books.books)\n  }\n\n  async function fetchBooksByAuthor(){\n    const userbooks = await getAllUserBooksAuthor()\n    setBooks(userbooks.user.books)\n  }\n\n  async function submitShelvesForm(e){\n    e.preventDefault()\n    await createShelf({\n      name: nameInput.value\n    })\n    setShowNewShelf(false)\n    setNewShlef(true)\n  }\n\n  function submitSearch(e){\n    e.preventDefault()\n    setBooks(books.filter(book => book.title.toLowerCase().includes(searchInput.value.toLowerCase()) ||\n                                  book.authorFirstName.toLowerCase().includes(searchInput.value.toLowerCase()) ||\n                                  book.authorLastName.toLowerCase().includes(searchInput.value.toLowerCase())))\n    if (searchInput.value === \"\") fetchAllBooks()\n  }\n  \n  function showForm(){\n    if (showNewShelf) setShowNewShelf(false)\n    else setShowNewShelf(true)\n  }\n\n  useEffect(() => {\n    fetchAllBooks()\n    setChangePage(false)\n    setNewShlef(false)\n  }, [changePage, newShlef])\n\n\n  return (\n    <div className=\"userhome\">\n      <div>\n        <h2>Estantes</h2>\n          {!showNewShelf && <button onClick={showForm}><FontAwesomeIcon icon={faPlus}/>&nbsp;&nbsp;Crear nuevo estante</button>}\n          {showNewShelf && \n            <form onSubmit={submitShelvesForm}>\n              <label><b>Nombre del estante: </b></label>\n              <input required type=\"text\" name=\"name\" id=\"name\" {...nameInput}/>\n              <button type=\"submit\">Crear estante</button>\n              <button onClick={showForm}>Cancelar</button>\n            </form>}\n        <ul>\n          <li><Link onClick={fetchAllBooks}><FontAwesomeIcon icon={faBook}/>&nbsp;&nbsp;Todos tus libros</Link></li>\n          {shelves?.map((shelf, i) => (\n          <li key={i}><Link onClick={() => fetchBookByShelf(shelf._id)}><FontAwesomeIcon icon={faBook}/>&nbsp;&nbsp;{shelf.name}</Link></li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <form onChange={submitSearch} onSubmit={submitSearch} className=\"search\">\n        <input type=\"text\" className=\"searchTerm\" placeholder=\"Busca por autor(a) o título\" {...searchInput}/>\n        <button className=\"searchButton\"><FontAwesomeIcon icon={faSearch}/></button>\n        </form>\n        <div>\n          <button onClick={fetchBooksByAuthor}>Ver por autor</button>\n          <button onClick={fetchAllBooks}>Ver por título</button>\n        </div>\n        <div>\n          {books? books.map((book, i)=> (\n            <div key={i} className=\"bookcard\">\n              <img src={book.cover} alt=\"Book cover\"/>\n              <div>\n                <h4>{book.title}</h4>\n                <p>{book.authorFirstName} {book.authorLastName}</p>\n                <p>{book.coAuthorFirstName} {book.coAuthorLastName}</p>\n              </div>\n              <div>\n                <button><Link to={`/detailbook/${book._id}`}>Detalles</Link></button>\n              </div>\n            </div>\n          )) \n          : <Loader></Loader>}\n          {books === [] && <p>Aún no tienes libros</p>}\n        </div>\n          {lessBtn && <button onClick={pagintationLess}>Regresa</button>}\n          {moreBtn && <button onClick={pagintationMore}>Ver más libros</button>}\n      </div>\n    </div>\n  )\n}\n\nexport default UserHome\n","import axios from \"axios\"\n\nconst baseURL = process.env.NODE_ENV === `production`? `/api` : \"http://localhost:3000/api\"\nconst service = axios.create({ baseURL, withCredentials: true })\n\nexport const createNote = async (bookId, noteData) => {\n  await service.post(`/note/${bookId}`, noteData)\n  return true\n}\n\nexport const updateNote = async noteData => {\n  const { data: note } = await service.put(\"\", noteData)\n  return note\n}\n\nexport const deleteNote = async noteId => {\n  await service.delete(`/notedelete/${noteId}`)\n}","import axios from \"axios\"\n\nconst baseURL = process.env.NODE_ENV === `production`? `/api` : \"http://localhost:3000/api\"\nconst service = axios.create({ baseURL, withCredentials: true })\n\nexport const createQuote = async (bookId, quoteData) => {\n  await service.post(`/quote/${bookId}`, quoteData)\n  return true\n}\n\nexport const updateQuote = async quoteData => {\n  const { data: quote } = await service.put(\"\", quoteData)\n  return quote\n}\n\nexport const deleteQuote = async quoteId => {\n  await service.delete(`/quotedelete/${quoteId}`)\n}","import React, { useState } from 'react'\nimport useInput from \"../hooks/useInput\"\nimport { createNote } from \"../services/notes\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faFeatherAlt } from \"@fortawesome/free-solid-svg-icons\"\n\n\nfunction NewNote({bookIdToUse, setNewNote}) {\n  const descriptionInput = useInput(\"\")\n  const chapterInput = useInput(\"\")\n  const pagesInput = useInput(\"\")\n  const [showFrom, setShowFrom] = useState(false)\n\n  async function submitForm(e){\n    e.preventDefault()\n    await createNote(bookIdToUse, {\n      description: descriptionInput.value,\n      chapter: chapterInput.value,\n      pages: pagesInput.value\n    })\n    setShowFrom(false)\n    setNewNote(true)\n  }\n\n  function changeForm(){\n    if (!showFrom) setShowFrom(true)\n    else setShowFrom(false)\n  }\n\n  return (\n    <div className=\"newnoteformat\">\n      {!showFrom && <button onClick={changeForm}><FontAwesomeIcon icon={faFeatherAlt}/> Agregar nueva nota</button>}\n      {showFrom && \n        <form onSubmit={submitForm}>\n          <label>Descripción:</label>\n          <textarea required autofocus type=\"text\" name=\"description\" id=\"description\" placeholder=\"Escribe aquí todo lo que quiras guardar sobre el libro...\" {...descriptionInput}></textarea>\n          <div>\n            <div>\n              <label>Capítulo relacionado:&nbsp;</label>\n              <input type=\"text\" name=\"chapter\" id=\"chapter\" placeholder=\"Ejs. Capítulo 1, cap I, Prefacio\" {...chapterInput}></input>\n            </div>\n            <div>\n              <label>Páginas:&nbsp;</label>\n              <input type=\"text\" name=\"pages\" id=\"pages\" placeholder=\"Ejs. 2-4, 7 y 15\"{...pagesInput}></input> \n            </div>\n          </div>\n          <div>\n            <button type=\"submit\"> Crear nota</button>\n            <button onClick={changeForm}>Cancelar</button>\n          </div>\n        </form>\n      }\n    </div>\n  )\n}\n\nexport default NewNote\n","import React, { useState } from 'react'\nimport useInput from \"../hooks/useInput\"\nimport { createQuote } from \"../services/quote\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faFeatherAlt } from \"@fortawesome/free-solid-svg-icons\"\n\n\nfunction NewQuote({bookIdToUse, setNewQuote}) {\n  const descriptionInput = useInput(\"\")\n  const noteInput = useInput(\"\")\n  const pagesInput = useInput(\"\")\n  const [showFrom, setShowFrom] = useState(false)\n\n  async function submitForm(e){\n    e.preventDefault()\n    await createQuote(bookIdToUse, {\n      description: descriptionInput.value,\n      note: noteInput.value,\n      pages: pagesInput.value\n    })\n    setShowFrom(false)\n    setNewQuote(true)\n  }\n\n  function changeForm(){\n    if (!showFrom) setShowFrom(true)\n    else setShowFrom(false)\n  }\n\n  return (\n    <div className=\"newnoteformat\">\n      {!showFrom && <button onClick={changeForm}><FontAwesomeIcon icon={faFeatherAlt}/>Agrega una nueva cita</button>}\n      {showFrom && \n        <form className=\"newquote\" onSubmit={submitForm}>\n          <label>Cita textual:</label>\n          <textarea required type=\"text\" name=\"description\" id=\"description\" placeholder=\"Escribe aquí la cita que quieras guardar, no es necesario ponerla entre comillas\" {...descriptionInput}></textarea>\n          <label>Nota:</label>\n          <textarea type=\"text\" name=\"note\" id=\"note\" placeholder=\"¿Algún pensamiento relacionada a la cita?\" {...noteInput}></textarea>\n          <label>Páginas:</label>\n          <input type=\"text\" name=\"pages\" id=\"pages\" placeholder=\"Ejs. 2-4, 7 y 15\" {...pagesInput}></input>\n          <div className=\"newquote\">\n            <button type=\"submit\"> Crear cita</button>\n            <button onClick={changeForm}>Cancelar</button>\n          </div>\n        </form>\n      }\n    </div>\n  )\n}\n\nexport default NewQuote\n","import React, {useState} from 'react'\n\nfunction Reference({bookData}) {\n  const [referenceAPA, setReferenceAPA] = useState(false)\n  const [referenceMLA, setReferenceMLA] = useState(false)\n  const [referenceChicago, setReferenceChicago] = useState(false)\n  const [referenceUNEISO, setReferenceUNEISO] = useState(false)\n  \n  function showAPA(){\n    setReferenceAPA(true)\n    setReferenceMLA(false)\n    setReferenceChicago(false)\n    setReferenceUNEISO(false)\n  }\n\n  function showMLA(){\n    setReferenceAPA(false)\n    setReferenceMLA(true)\n    setReferenceChicago(false)\n    setReferenceUNEISO(false)\n  }\n\n  function showChicago(){\n    setReferenceAPA(false)\n    setReferenceMLA(false)\n    setReferenceChicago(true)\n    setReferenceUNEISO(false)\n  }\n\n  function showUNEISO(){\n    setReferenceAPA(false)\n    setReferenceMLA(false)\n    setReferenceChicago(false)\n    setReferenceUNEISO(true)\n  }\n\n  return (\n    <div>\n      <p>Selecciona un formato de referencias: </p>\n      <div>\n        <input type=\"radio\" name=\"reference\" value=\"apa\" onChange={showAPA}/>\n        <label for=\"apa\">APA</label>\n        <input type=\"radio\" name=\"reference\" value=\"mla\" onChange={showMLA}/>\n        <label for=\"mla\">MLA</label>\n        <input type=\"radio\" name=\"reference\" value=\"chicago\" onChange={showChicago}/>\n        <label for=\"chicago\">Chicago</label>\n        <input type=\"radio\" name=\"reference\" value=\"UNE-ISO 690 \" onChange={showUNEISO}/>\n        <label for=\"UNE-ISO 690\">UNE-ISO 690 </label>\n      </div>\n      <div>\n        {referenceAPA && <p>{bookData.authorLastName? bookData.authorLastName : \"Apellido\"}, {bookData.authorFirstName? bookData.authorFirstName.charAt(0) : \"Iniciales\"}. ({bookData.published? bookData.published.slice(0, 4) : \"Año de publicación\"}). <em>{bookData.title}</em>. {bookData.publisher === []? \"Editorial\": bookData.publisher}</p>}\n        {referenceMLA && <p>{bookData.authorLastName? bookData.authorLastName : \"Apellido\"}, {bookData.authorFirstName? bookData.authorFirstName : \"Nombre\"}. <em>{bookData.title}</em>. {bookData.publishPlace? bookData.publishPlace : \"Lugar de publicación\"}: {bookData.publisher === []? \"Editorial\": bookData.publisher}, {bookData.published? bookData.published.slice(0, 4) : \"Año de publicación\"}. </p>}\n        {referenceChicago && <p>{bookData.authorLastName? bookData.authorLastName : \"Apellido\"}, {bookData.authorFirstName? bookData.authorFirstName : \"Nombre\"}. <em>{bookData.title}</em>. {bookData.publishPlace? bookData.publishPlace : \"Lugar de publicación\"}: {bookData.publisher === []? \"Editorial\": bookData.publisher}, {bookData.published? bookData.published.slice(0, 4) : \"Año de publicación\"}. </p>}\n  {referenceUNEISO && <p>{bookData.authorLastName? bookData.authorLastName.toUpperCase() : \"Apellido\"}, {bookData.authorFirstName? bookData.authorFirstName : \"Nombre\"}. <em>{bookData.title}.</em> {bookData.publishPlace? bookData.publishPlace : \"Lugar de publicación\"}: {bookData.publisher === []? \"Editorial\": bookData.publisher}, {bookData.published? bookData.published.slice(0, 4) : \"Año de publicación\"}. ISBN: {bookData.ISBN? bookData.ISBN : \"ISBN\"}</p>}\n      </div>\n    </div>\n  )\n}\n\nexport default Reference\n","import React, { useState, useEffect } from 'react'\nimport { addBookShelf, getUserShelves, removeBookShelf } from \"../services/shelves\"\nimport useInput from \"../hooks/useInput\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\"\n\n\n\nfunction ShelvesInBook({shelves, bookId, setNewShelf}) {\n  const nameIpunt = useInput(\"\")\n  const [showAddShelf, setShowAddShelf] = useState(false)\n  const [allUserShelves, setAllUserShelves] = useState(null)\n\n  function formatAddShelf(){\n    if (!showAddShelf) setShowAddShelf(true)\n    else setShowAddShelf(false)\n  }\n\n  async function fetchUsersShelves(){\n    const userShelves = await getUserShelves()\n    setAllUserShelves(userShelves.shelves.shelves)\n  }\n\n  async function removeBook(shelfId){\n    await removeBookShelf(bookId, {\n      shelfId\n    })\n    setNewShelf(true)\n  }\n\n  async function submitForm(e){\n    e.preventDefault()\n    await addBookShelf(bookId, {\n      shelfId: nameIpunt.value\n    })\n    setShowAddShelf(false)\n    setNewShelf(true)\n  }\n\n  useEffect(() => {\n    fetchUsersShelves()\n  }, [])\n\n  return (\n    <div className=\"bookshelves\">\n      <p><b>Estantes:</b></p>\n      <div>\n        {shelves?.map((e, i)=>(\n          <div>\n            <p key={i}>{e.name}</p>\n            <button onClick={() => removeBook(e._id)}><FontAwesomeIcon icon={faTrash}/>&nbsp;Quitar</button>\n          </div>\n        ))}\n      </div>\n      {!showAddShelf && <button onClick={formatAddShelf}> <FontAwesomeIcon icon={faPlus}/>&nbsp;&nbsp; Añade el libro a un estante</button>}\n      {showAddShelf && \n        <form onSubmit={submitForm}>\n          <select required name=\"shelf\" {...nameIpunt}>\n            <option value=\"\" selected>Selecciona un estante</option>\n            {allUserShelves?.map((e, i) => (\n              <option value={e._id}> {e.name}</option>\n            ))}\n          </select>\n          <button type=\"submit\">Añade libro</button>\n          <button className=\"cancel\" onClick={formatAddShelf}>Cancelar</button>\n        </form>}\n    </div>\n  )\n}\n\nexport default ShelvesInBook\n","import React, {useState} from 'react'\nimport { Link, useHistory } from \"react-router-dom\"\nimport { deleteBook, updateBook } from \"../services/books\"\nimport ShelvesInBook from \"./ShelvesInBook\"\nimport axios from \"axios\"\nimport useInput from \"../hooks/useInput\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport swal from \"@sweetalert/with-react\"\n\nfunction BookCardDetail({book, setUpdateBook, bookShelves, bookId, setNewShelf}) {\n  const [showForm, setShowForm] = useState(false)\n  const history = useHistory()\n  const titleInput = useInput(book.title)\n  const authorFirstNameInput = useInput(book.authorFirstName)\n  const authorLastNameInput = useInput(book.authorLastName)\n  const coAuthorFirstNameInput = useInput(book.coAuthorFirstName)\n  const coAuthorLastNameInput = useInput(book.coAuthorLastName)\n  const publisherInput = useInput(book.publisher)\n  const publishedInput = useInput(book.published?.slice(0,4))\n  const editionInput = useInput(book.edition)\n  const ISBNInput = useInput(book.ISBN)\n  const publishPlaceInput = useInput(book.publishPlace)\n  const pagesInput = useInput(book.pages)\n  const formatInput = useInput(\"\")\n  const descriptionInput = useInput(book.description)\n  const [coverURL, setCoverURL] = useState(book.cover)\n  const [coauthor, setcoauthor] = useState(false)\n\n\n  function eliminateBook(){\n    swal({\n      title:\"Eliminar\",\n      text: \"¿Estás seguro(a) de que quieres eliminar el libro?\",\n      buttons: [\"Cancelar\", \"Confirmar\"],\n      className: \"pusnotification\"\n    }).then(response => {\n      if (response){\n        confirmEliminate()\n      }\n    })\n  }\n\n  async function confirmEliminate(){\n    await deleteBook(book._id)\n    history.push(\"/userhome\")\n  }\n\n  function editForm(){\n    if (book.coAuthorLastName) setcoauthor(true)\n    if (!showForm) setShowForm(true)\n    else setShowForm(false)\n  }\n\n  function moreAuthors(){\n    if (!coauthor) setcoauthor(true)\n    else setcoauthor(false)\n  }\n\n  async function uploadCover({ target: { files } }){\n    const data = new FormData()\n    data.append(\"file\", files[0])\n    data.append(\"upload_preset\", \"all_my_books\")\n\n    const { data: { secure_url } } = await axios.post(\"http://api.cloudinary.com/v1_1/dxncdwsau/image/upload\", data)\n    setCoverURL(secure_url)\n  }\n\n  async function submitForm(e){\n    e.preventDefault()\n    await updateBook(book._id, {\n      title: titleInput.value,\n      authorFirstName: authorFirstNameInput.value,\n      authorLastName: authorLastNameInput.value,\n      coAuthorFirstName:coAuthorFirstNameInput.value,\n      coAuthorLastName: coAuthorLastNameInput.value,\n      publisher: publisherInput.value,\n      published: publishedInput.value,\n      edition: editionInput.value,\n      ISBN: ISBNInput.value,\n      publishPlace: publishPlaceInput.value,\n      pages: pagesInput.value,\n      format: formatInput.value,\n      description: descriptionInput.value,\n      cover: coverURL\n    })\n    setShowForm(false)\n    setUpdateBook(true)\n  }\n  \n\n  return (\n    <div className=\"bookDetailCard\">\n        {!showForm && \n        <>\n        <div>\n          <div>\n            <img src={book.cover} alt=\"Book cover\"/>\n          </div>\n            <div>\n            <button onClick={editForm}> <FontAwesomeIcon icon={ faEdit }/>&nbsp;<Link>Editar libro</Link></button>\n            <button onClick={eliminateBook}> <FontAwesomeIcon icon={ faTrashAlt }/>&nbsp; <Link to= \"\">Eliminar libro</Link></button>\n          </div>\n        </div>\n        <div>\n          <h2>{book.title}</h2>\n          <h3>{book.authorFirstName} {book.authorLastName}</h3>\n          <h3>{book.coAuthorFirstName} {book.coAuthorLastName}</h3>\n          <p><b>Editorial:</b> {book.publisher}</p>\n          <p><b>Año de publicación:</b> {book.published?.slice(0,4)}</p>\n          <p><b>Lugar de publicación:</b> {book.publishPlace}</p>\n          <p><b>Edición:</b> {book.edition}</p>\n          <p><b>Formato:</b> {book.format?.toLowerCase()}</p>\n          <p><b>Número de páginas:</b> {book.pages}</p>\n          <p><b>ISBN:</b> {book.ISBN}</p>\n        </div>\n        <div>\n          <div>\n            <p><b>Reseña:</b></p>\n            <p>{book.description}</p>\n          </div>\n            <ShelvesInBook shelves={bookShelves} bookId={bookId} setNewShelf={setNewShelf}></ShelvesInBook>\n        </div>\n        </>}\n        \n        {showForm &&\n        <>\n        <div>\n            <img src={book.cover} alt=\"Book cover\"/>\n        </div>\n        <form className=\"updatebook\" onSubmit={submitForm}>\n            <div>\n              <label>Título:</label>\n              <br/>\n              <input required type=\"text\" name=\"title\" id=\"title\" {...titleInput}/>\n              <br/>\n              <label>Nombre del autor(a):</label>\n              <br/>\n              <input type=\"text\" name=\"authorFirstName\" id=\"authorFirstName\" {...authorFirstNameInput}/>\n              <br/>\n              <label>Apellido del autor(a):</label>\n              <br/>\n              <input type=\"text\" name=\"authorLastName\" id=\"authorLastName\" {...authorLastNameInput}/>\n              <div>\n              {!coauthor && <button onClick={moreAuthors}>Agrega otro autor(a)</button>}\n              </div>\n              {coauthor && \n                <>\n                <div>\n                  <label>Nombre del coautor(a):</label>\n                  <input type=\"text\" name=\"author\" id=\"author\" {...coAuthorFirstNameInput}/>\n                </div>\n                <div>\n                  <label>Apellido del coautor(a):</label>\n                  <input type=\"text\" name=\"author\" id=\"author\" {...coAuthorLastNameInput}/>\n                </div>\n                </>}\n              <label>Editorial:</label>\n              <input type=\"text\" name=\"publisher\" id=\"publisher\" {...publisherInput}/>\n              <br/>\n              <label>Edición:</label>\n              <input type=\"text\" name=\"edition\" id=\"edition\" {...editionInput}/>\n            </div>\n            <div>\n              <div>\n                <label>Año de publicación:</label>\n                <input type=\"text\" name=\"published\" id=\"published\" {...publishedInput}/>\n              </div>\n              <div>\n                <label>Lugar de publicación:</label>\n                <input type=\"text\" name=\"publishPlace\" id=\"publishPlace\" {...publishPlaceInput}/>\n              </div>\n              <div>\n                <label>ISBN: </label>\n                <input type=\"text\" name=\"ISBN\" id=\"ISBN\" {...ISBNInput}/>\n              </div>\n              <div>\n                <label>Páginas:</label>\n                <input type=\"text\" name=\"pages\" id=\"pages\" {...pagesInput}/>\n              </div>\n              <div>\n                <label>Formato:</label>\n                <select required name=\"format\" {...formatInput}>\n                  <option value=\"\" selected>Selecciona una opción</option>\n                  <option value=\"TAPA BLANDA\">Tapa blanda</option>\n                  <option value=\"TAPA DURA\">Tapa dura</option>\n                  <option value=\"EBOOK \">Ebook</option>\n                </select>\n              </div>\n                <label>Portada: </label>\n                <div className=\"button-wrapper updatebookupload\">\n                  <span className=\"label\">Agrega un archivo</span>  \n                  <input onChange={uploadCover} type=\"file\" name=\"upload\" id=\"upload\" className=\"upload-box\" placeholder=\"Upload File\"/>\n                </div>\n                <label>Descripción</label>\n                <textarea type=\"text\" name=\"description\" id=\"description\" {...descriptionInput}/>\n                <div>\n                  <button type=\"submit\">Editar</button>\n                  <button onClick={editForm}>Cancelar</button>\n                </div>\n            </div>\n      </form>\n        </>}\n    </div>\n  )\n}\n\nexport default BookCardDetail","import React, { useState, useEffect } from 'react'\nimport Loader from \"../components/Loader\"\nimport { getBookDetail } from \"../services/books\"\nimport { deleteNote } from \"../services/notes\"\nimport { deleteQuote } from \"../services/quote\"\nimport NewNote from \"../components/NewNote\"\nimport NewQuote from \"../components/NewQuote\"\nimport Reference from \"../components/Reference\"\nimport BookCardDetail from \"../components/BookCardDetail\"\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faFileAlt, faBookmark, faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\"\n\nfunction BookDetail({ match: { params: { bookId } }}) {\n  const [book, setBook] = useState(null)\n  const [notes, setNotes] = useState(true)\n  const [quotes, setQuotes] = useState(false)\n  const [references, setReferences] = useState(false)\n  const [allNotes, setAllNotes] = useState(null)\n  const [allQuotes, setAllQuotes] = useState(null)\n  const [allShelves, setAllShelves] = useState(null)\n  const [newNote, setNewNote] = useState(false)\n  const [newQuote, setNewQuote] = useState(false)\n  const [newShelf, setNewShelf] = useState(false)\n  const [updateBook, setUpdateBook] = useState(false)\n\n  async function fetchBook() {\n    const detailbook = await getBookDetail(bookId)\n    setBook(detailbook.book)\n    setAllNotes(detailbook.book.notes)\n    setAllQuotes(detailbook.book.quotes)\n    setAllShelves(detailbook.book.bookshelves)\n  }\n\n  async function eliminateNote(id){\n    await deleteNote(id)\n    setNewNote(true)\n  }\n\n  async function eliminateQuote(id){\n    await deleteQuote(id)\n    setNewQuote(true)\n  }\n\n  function showNotes(){\n    setNotes(true)\n    setQuotes(false)\n    setReferences(false)\n  }\n\n  function showQuotes(){\n    setNotes(false)\n    setQuotes(true)\n    setReferences(false)\n  }\n\n  function showReferences(){\n    setNotes(false)\n    setQuotes(false)\n    setReferences(true)\n  }\n\n  useEffect(() => {\n    fetchBook()\n    setNewNote(false)\n    setNewQuote(false)\n    setUpdateBook(false)\n    setNewShelf(false)\n  }, [newNote, newQuote, updateBook, newShelf])\n\n  return (\n    <div className=\"bookdetail\">\n        {book? \n        <>\n          <BookCardDetail book={book} setUpdateBook={setUpdateBook} bookShelves={allShelves} bookId={bookId} setNewShelf={setNewShelf}></BookCardDetail>\n          <div className=\"notesbook\">\n            <Link onClick={showNotes}><FontAwesomeIcon icon={faBookmark}/>&nbsp;Notas</Link>\n            <Link onClick={showQuotes}><FontAwesomeIcon icon={faQuoteLeft}/>&nbsp;Citas</Link>\n            <Link onClick={showReferences}><FontAwesomeIcon icon={faFileAlt}/>&nbsp;Referencia</Link>\n            {notes && \n              <div className=\"notescards\">\n                <NewNote bookIdToUse={bookId} setNewNote={setNewNote}></NewNote>\n                {allNotes? allNotes.map((note, i) => (\n                  <div className=\"onenotecard\" key={i}>\n                    <p>{note.chapter}</p>\n                    {note.pages && <p>Página(s): {note.pages}</p>}\n                    <p>{note.description}</p>\n                    <button onClick={()=>{eliminateNote(note._id)}}>Eliminar nota</button>\n                  </div> \n                )) : <p>Agrega tus notas sobre el libro</p>}\n              </div>}\n            {quotes && \n              <div className=\"notescards\">\n                <NewQuote bookIdToUse={bookId} setNewQuote={setNewQuote}></NewQuote>\n                {allQuotes?.map((quote, i) => (\n                  <div className=\"onenotecard\" key={i}>\n                    <p>«{quote.description}»</p>\n                    {quote.pages && <p>Página(s): {quote.pages}</p>}\n                    {quote.note && <p>Nota: {quote.note}</p>}\n                    <button onClick={()=>{eliminateQuote(quote._id)}}>Eliminar nota</button>\n                  </div> \n                ))}\n                </div>}\n            {references && \n              <div className=\"notescards\">Referencias\n                <Reference bookData={book}></Reference>\n              </div>}\n          </div>\n          </>\n        : <Loader></Loader>}\n    </div>\n  )\n}\n\nexport default BookDetail\n","import React, { useState } from 'react'\nimport { createBook } from \"../services/books\"\nimport useInput from \"../hooks/useInput\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faBookOpen,faPlus } from \"@fortawesome/free-solid-svg-icons\"\n\n\nfunction NewBook({ history }) {\n  const titleInput = useInput(\"\")\n  const authorFirstNameInput = useInput(\"\")\n  const authorLastNameInput = useInput(\"\")\n  const coAuthorFirstNameInput = useInput(\"\")\n  const coAuthorLastNameInput = useInput(\"\")\n  const publisherInput = useInput(\"\")\n  const publishedInput = useInput(\"\")\n  const editionInput = useInput(\"\")\n  const ISBNInput = useInput(\"\")\n  const publishPlaceInput = useInput(\"\")\n  const pagesInput = useInput(\"\")\n  const formatInput = useInput(\"\")\n  const descriptionInput = useInput(\"\")\n  const [imageURL, setImageURL] = useState(\"https://res.cloudinary.com/dxncdwsau/image/upload/v1601179377/All%20My%20Books/All_My_Books_fwa6ma.jpg\")\n  const [coauthor, setcoauthor] = useState(false)\n\n  function moreAuthors(){\n    if (!coauthor) setcoauthor(true)\n    else setcoauthor(false)\n  }\n\n  async function uploadCover({ target: { files } }){\n    const data = new FormData()\n    data.append(\"file\", files[0])\n    data.append(\"upload_preset\", \"all_my_books\")\n    const { data: { secure_url } } = await axios.post(\"http://api.cloudinary.com/v1_1/dxncdwsau/image/upload\", data)\n    setImageURL(secure_url)\n  }\n\n  async function submitForm(e){\n    e.preventDefault()\n    await createBook({\n      title: titleInput.value,\n      authorFirstName: authorFirstNameInput.value,\n      authorLastName: authorLastNameInput.value,\n      coAuthorFirstName:coAuthorFirstNameInput.value,\n      coAuthorLastName: coAuthorLastNameInput.value,\n      publisher: publisherInput.value,\n      published: publishedInput.value,\n      edition: editionInput.value,\n      ISBN: ISBNInput.value,\n      publishPlace: publishPlaceInput.value,\n      pages: pagesInput.value,\n      format: formatInput.value,\n      description: descriptionInput.value,\n      cover: imageURL\n    })\n    history.push(\"/userhome\")\n  }\n\n  return (\n    <div className=\"newbook\">\n      <h2>Crea un nuevo libro</h2>\n      <form onSubmit={submitForm}>\n        <div>\n          <label>Título:</label>\n          <input autoFocus required type=\"text\" name=\"title\" id=\"title\" placeholder=\"Frankenstein o el moderno Prometeo\" {...titleInput}/>\n        </div>\n        <div className=\"author\">\n          <div>\n            <label>Nombre del autor(a):</label>\n            <input type=\"text\" name=\"author\" id=\"author\" placeholder=\"Mary\" {...authorFirstNameInput}/>\n          </div>\n          <div>\n            <label>Apellido del autor(a):</label>\n            <input type=\"text\" name=\"author\" id=\"author\" placeholder=\"Shelley\" {...authorLastNameInput}/>\n          </div>\n        </div>\n        <div>\n          {!coauthor && <button onClick={moreAuthors}><FontAwesomeIcon icon={faPlus}/>&nbsp;&nbsp;Agrega otro autor(a)</button>}\n        </div>\n        {coauthor && \n          <div className=\"author\">\n            <div>\n              <label>Nombre del coautor(a):</label>\n              <input type=\"text\" name=\"author\" id=\"author\" {...coAuthorFirstNameInput}/>\n            </div>\n            <div>\n              <label>Apellido del coautor(a):</label>\n              <input type=\"text\" name=\"author\" id=\"author\" {...coAuthorLastNameInput}/>\n            </div>\n          </div>}\n        <div className=\"author\">\n          <div>\n            <label>Editorial:</label>\n            <input type=\"text\" name=\"publisher\" id=\"publisher\" placeholder=\"Lackington, Hughes & Harding\" {...publisherInput}/>\n          </div>\n          <div>\n            <label>Edición:</label>\n            <input type=\"text\" name=\"edition\" id=\"edition\" placeholder=\"primera edición\" {...editionInput}/>\n          </div>\n        </div>\n        <div className=\"author\">\n          <div>\n            <label>Año de publicación:</label>\n            <input type=\"text\" name=\"published\" id=\"published\" placeholder=\"1818\" {...publishedInput}/>\n          </div>\n          <div>\n            <label>Lugar de publicación:</label>\n            <input type=\"text\" name=\"publishPlace\" id=\"publishPlace\" placeholder=\"Londres\" {...publishPlaceInput}/>\n          </div>\n        </div>\n        <div className=\"author\">\n          <div>\n            <label>ISBN:</label>\n            <input placeholder=\"000-0-00-000000-0\" type=\"text\" name=\"ISBN\" id=\"ISBN\" {...ISBNInput}/>\n          </div>\n          <div>\n            <label>Páginas:</label>\n            <input type=\"text\" name=\"pages\" id=\"pages\" placeholder=\"280\" {...pagesInput}/>\n          </div>\n        </div>\n        <div className=\"author\">\n          <label>Portada: </label>\n          <div className=\"button-wrapper\">\n            <span className=\"label\">Agrega un archivo</span>  \n            <input onChange={uploadCover} type=\"file\" name=\"upload\" id=\"upload\" className=\"upload-box\" placeholder=\"Upload File\"/>\n          </div>\n        </div>\n        <div>\n          <label>Formato:</label>\n          <select required name=\"format\" {...formatInput}>\n            <option value=\"\" selected>Selecciona una opción</option>\n            <option value=\"TAPA BLANDA\">Tapa blanda</option>\n            <option value=\"TAPA DURA\">Tapa dura</option>\n            <option value=\"EBOOK \">Ebook</option>\n          </select>\n        </div>\n        <div>\n          <label>Descripción:</label>\n          <textarea type=\"text\" name=\"description\" id=\"description\" placeholder=\"La novela narra la historia de Víctor Frankenstein, un estudiante de medicina en Ingolstadt, obsesionado por conocer «los secretos del cielo y la tierra».\" {...descriptionInput}/>\n        </div>\n        \n        <div>\n          <button type=\"submit\"><FontAwesomeIcon icon={faBookOpen}/>&nbsp;Crear libro</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Context } from \"../context\"\nimport { Link } from \"react-router-dom\"\nimport { updateUser } from \"../services/auth\"\nimport axios from \"axios\"\nimport useInput from \"../hooks/useInput\"\nimport { getUserShelves } from \"../services/shelves\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {faEdit } from \"@fortawesome/free-solid-svg-icons\"\n\nfunction UserConfig() {\n  const { user } = useContext(Context)\n  const usernameInput = useInput(user?.username)\n  const emailInput = useInput(user?.email)\n  const [photoURL, setPhotoURL] = useState(user?.profilePhoto)\n  const [showForm, setShowForm] = useState(false)\n  const [shelves, setShelves] = useState(null)\n  const [shelvesConfig, setShelvesConfig] = useState(false)\n  const [showShelvesConfig, setShowShelvesConfig] = useState(false)\n  const shelfNameInput = useInput(shelves?.name)\n\n\n  async function fetchShelves(){\n    const shlevesData = await getUserShelves()\n    setShelves(shlevesData.shelves.shelves)\n  }\n\n  function shelvesForm(){\n    if (!showShelvesConfig) setShowShelvesConfig(true)\n    else setShowShelvesConfig(false)\n  }\n\n  function editForm(){\n    if (!showForm) setShowForm(true)\n    else setShowForm(false)\n  }\n\n  async function uploadPhoto({ target: { files } }){\n    const data = new FormData()\n    data.append(\"file\", files[0])\n    data.append(\"upload_preset\", \"all_my_books\")\n\n    const { data: { secure_url } } = await axios.post(\"http://api.cloudinary.com/v1_1/dxncdwsau/image/upload\", data)\n    setPhotoURL(secure_url)\n  }\n\n  async function submitForm(e){\n    e.preventDefault()\n    await updateUser(\n    {\n      username: usernameInput.value,\n      email: emailInput.value,\n      profilePhoto: photoURL\n    })\n    console.log(usernameInput.value)\n    setShowForm(false)\n  }\n\n  useEffect(() => {\n    fetchShelves()\n  }, [])\n\n  return (\n    <div className=\"userProfile\">\n      <div>\n        {!showForm && user?\n        <div>\n          <div>\n            <img src={user.profilePhoto} alt=\"Profile\"/>\n          </div>\n          <div>\n            <h2>{user.username}</h2>\n            <h3>{user.email}</h3>\n            <button onClick={editForm}> <FontAwesomeIcon icon={ faEdit }/>&nbsp;<Link>Editar</Link></button>\n          </div>\n        </div>: <></>}\n        \n        {showForm && user?\n        <>\n        <div>\n          <div>\n            <img src={user.profilePhoto} alt=\"Profile\"/>\n          </div>\n            <div>\n            <button onClick={editForm}><Link>Cancelar</Link></button>\n          </div>\n        </div>\n        <form onSubmit={submitForm}>\n        <label>Nombre de usuario: </label>\n        <input required type=\"text\" name=\"username\" id=\"username\" {...usernameInput}/>\n        <br/>\n        <label>Email: </label>\n        <input required type=\"text\" name=\"email\" id=\"email\" {...emailInput}/>\n        <label>Foto de perfil: </label>\n        <input type=\"file\" onChange={uploadPhoto}/>\n        <button type=\"submit\">Editar</button>\n        <button onClick={editForm}>Cancelar</button>\n        </form>\n        </> : <></>}\n      </div>\n      <div>\n        {!showShelvesConfig && \n        <div>\n          <p><b>Estantes:</b></p>\n          <ul>\n            {shelves? shelves.map((shlef, i) => (\n              <li>{shlef.name}</li>\n            )) : <p>Aún no tienes estantes</p>}\n          </ul>\n          <button onClick={shelvesForm}>Edita tus estantes</button>\n        </div> }\n        \n        {showShelvesConfig && \n          <>\n          <form>\n            {shelves?.map((shelf, i) => (\n              <>\n              <label>{shelves.name}</label>\n              <input type=\"text\" name=\"name\" id=\"name\" {...shelfNameInput} />\n              </>\n            ))}\n          </form>\n          <button onClick={shelvesForm}>Cancelar</button>\n          </>}\n      </div>\n    </div>\n  )\n}\n\nexport default UserConfig\n","import React from \"react\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport Layout from \"./components/Layout\"\nimport Home from \"./pages/Home\"\nimport UserHome from \"./pages/UserHome\"\nimport BookDetail from \"./pages/BookDetail\"\nimport NewBook from \"./pages/NewBook\"\nimport UserConfig from \"./pages/UserConfig\"\n\nconst Router = () => {\n  return(\n    <BrowserRouter>\n      <Switch>\n        <Route component={Home} path=\"/\" exact/>\n        <Layout>\n          <Route component={UserHome} path=\"/userhome\" exact/>\n          <Route component={NewBook} path=\"/newbook\" exact/>\n          <Route component={BookDetail} path=\"/detailbook/:bookId\" exact/>\n          <Route component={UserConfig} path=\"/userconfig\" exact/>\n        </Layout>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Router","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Router from \"./router\"\nimport CtxProvider from \"./context\"\n\nReactDOM.render(\n  <CtxProvider>\n    <Router />\n  </CtxProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}